pipeline {
    agent any 

    environment {
        DOCKER_USER = 'flask-im'
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-cred')
    }

    stages {
        stage('git clone') {
            steps {
                echo 'Cloning repository...'
                git(
                    url: 'https://github.com/gopi-ganesan/multi-server.git',
                    branch: 'main',
                    credentialsId: 'github-token'
                )
            }
        }

        stage('Build docker images') {
            steps {
                echo 'Building docker images...'
                dir('multiapp') {
                    sh 'docker-compose -f docker-compose.yml build'
                }
            }
        }

        stage('Push images to DockerHub') {
            steps {
                echo 'Pushing images to DockerHub...'
                dir('multiapp') {
                    script {
                        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                        sh 'docker tag multiapp_api:v1 $DOCKER_USER/multiapp_api:v1'
                        sh 'docker tag multiapp_frontend:v1 $DOCKER_USER/multiapp_frontend:v1'
                        sh 'docker push $DOCKER_USER/multiapp_api:v1'
                        sh 'docker push $DOCKER_USER/multiapp_frontend:v1'
                    }
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                echo 'Deploying the application...'
                dir('multiapp') {
                    sh 'docker-compose -f docker-compose.yml down || true'
                    sh 'docker-compose -f docker-compose.yml up -d'
                }
            }
        }

        stage('Test Services') {
            steps {
                echo 'Testing API and frontend...'
                sh 'curl http://localhost:5000/api'
                sh 'curl http://localhost:3000/'
            }
        }
    }

    post {
        success {
            echo ' Deployed successfully!'
        }

        failure {
            echo ' Deployment failed!'
        }
    }
}

